Eddroid.Main = function(game){
  this.map;
  this.mapjson;
  this.player;
  this.cursors;
  this.blockedLayer;
  this.music;


};
Eddroid.Main.prototype = {

  preload: function() {
    // this.load.image('premap', '<%= asset_path('premap.png') %>');
    // this.load.image('logo', '<%= asset_path('logo.png') %>');
    // this.load.image('map', '<%= asset_path('STREET.png') %>');
    // this.game.load.tilemap('mapjson', '<%= image_path('STREET.json.erb')%>', null, Phaser.Tilemap.TILED_JSON);
    // this.game.load.tilemap('mapjson', '/images/STREET.json', null, Phaser.Tilemap.TILED_JSON);
    // this.game.load.image('DOOR SMALL', '<%= image_path('!MDDoorsS.png')%>');
    // this.game.load.image('Doors');
    // this.game.load.image('Collision');
    // this.game.load.image('Sand');
    // this.game.load.image('Palm Trees');
    // this.game.load.image('pkehouse');
    // this.game.load.image('pokeships');
    // this.game.load.image('Sidewalk');
    // this.game.load.image('Buildings', 'images/TileA3.png');
    // this.game.load.image('Walls');
    // this.game.load.image('Street');
    // this.game.load.image('Windows');
    // this.game.load.image('TileC');
    // this.game.load.image('Cars');
    // this.game.load.image('warehouses');
    // this.game.load.image('Water');
    // this.game.load.image('Alvaro');
  },



  create: function(){



    this.world.setBounds(0,0,4800,4800);
    this.physics.startSystem(Phaser.Physics.ARCADE);
    map = this.add.sprite(0, 0, 'map');

    player = this.add.sprite(0, 1, 'Eddroid');
    // player.scale.setTo(0.5, 0.5);
    // player.frame = 0;

    //  game.add.tween(player).to({ x: game.width }, 10000, Phaser.Easing.Linear.None, true);

    this.physics.enable(player, Phaser.Physics.ARCADE);
    player.body.drag.set(100);
    player.body.maxVelocity.set(200);
    cursors = this.input.keyboard.createCursorKeys();

    this.camera.follow(player, Phaser.Camera.FOLLOW_TOPDOWN);
    player.body.collideWorldBounds = true;
    player.animations.add('walk-down',[0,1,2,3,4,5,6]);
    player.animations.add('walk-up',[8,9,10,11,12,13,14]);
    player.animations.add('walk-right',[15,16,17,18,19]);
    player.animations.add('walk-left',[20,21,22,23,24]);
    // player.animations.add('walk-up',[32,33,34,35,36]); sprite.animations.add('walk-down',[16,17,18,19,20]);
		// hero.animations.add('walkleft', [9,10,11,12,13,14,15,16,17]);
		// player.animations.add('south.walk', [0, 1, 2, 3, 4, 5, 6, 7]);
		// hero.animations.add('walkright', [27,28,29,30,31,32,33,34,35]);

    // music = game.add.audio('nightcall');
    // music.play();

  },


  update:function() {

    player.body.velocity.x = 0;
    player.body.velocity.y = 0;


    if (cursors.left.isDown)
    {
      player.animations.play('walk-left');
      player.body.velocity.x = -200;

    }
    else if (cursors.right.isDown)
    {
      player.animations.play('walk-right');
      player.body.velocity.x = 200;
    }

    if (cursors.up.isDown)
    {
      player.animations.play('walk-up');
      player.body.velocity.y = -200;
    }
    else if (cursors.down.isDown)
    {
      player.animations.play('walk-down');
      player.body.velocity.y = 200;
    }



  //   this.cursors.up.onDown.add(function()
  //   {    this.player.animations.play('up');}, this); this.cursors.down.onDown.add(function() {    this.player.animations.play('down');}, this);            this.cursors.right.onDown.add(function() {    this.player.animations.play('right');}, this);this.cursors.left.onDown.add(function() {    this.player.animations.play('left');}, this);
  //
  //   if (cursors.up.isDown)
  //   {
  //       this.physics.arcade.accelerationFromRotation(player.rotation, 200, player.body.acceleration);
  //   }
  //   else
  //   {
  //       player.body.acceleration.set(0);
  //   }
  //
  //   if (cursors.left.isDown)
  //   {
  //       player.body.angularVelocity = -300;
  //   }
  //   else if (cursors.right.isDown)
  //   {
  //       player.body.angularVelocity = 300;
  //   }
  //   else
  //   {
  //       player.body.angularVelocity = 0;
  //   }
  //
  }

};
